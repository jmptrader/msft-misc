@page "/"
@using FN18.Blazor.Entities
@inject HttpClient Http

<h1>Customer List</h1>

<p>This component demonstrates fetching data from the server.</p>

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label for="Description" class="control-label">Description</label>
                <input type="text" class="form-control" bind="@ci.Description" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-default" onclick="@(async () => await SubmitForm())">Save</button>
            </div>
        </form>
    </div>
</div>

@if (Customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table'>
        <thead>
            <tr>
                <th>ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Department</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in Customers)
            {
                <tr>
                    <td>@customer.TrackingId</td>
                    <td>@customer.Language</td>
                </tr>
            }
            </tbody>
    </table>
}
@functions {
    private ModeratorResult[] Customers { get; set; }

    private ContactItem ci = new ContactItem();

    protected override async Task OnInitAsync()
    {
        await RefreshCustomerList();
    }

    private async Task RefreshCustomerList()
    {
        Customers = await Http.GetJsonAsync<ModeratorResult[]>("http://localhost:7071/api/ModeratorList");
        StateHasChanged();
    }

    private async Task SubmitForm()
    {
        var request = await Http.SendJsonAsync<ModeratorResult>(HttpMethod.Post, "http://localhost:7071/api/Moderator", ci);

    }
    //private async Task FillWithDemoData()
    //{
    //    for (var i = 0; i < 10; i++)
    //    {
    //        await Http.SendJsonAsync(HttpMethod.Post, "/api/Customer", new Customer
    //        {
    //            FirstName = "Tom",
    //            LastName = $"Customer {i}",
    //            Department = i % 2 == 0 ? "Sales" : "Research"
    //        });
    //    }

    //    await RefreshCustomerList();
    //}

    private async Task DeleteAllCustomers()
    {
        //foreach (var c in Customers)
        //{
        //    await Http.DeleteAsync($"/api/Customer/{c.ID}");
        //}

        await RefreshCustomerList();
    }

    private async Task PrintWebApiResponse()
    {
        var response = await Http.GetStringAsync("/api/Customer");
        Console.WriteLine(response);
    }
}
